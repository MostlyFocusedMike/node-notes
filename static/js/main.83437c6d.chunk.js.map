{"version":3,"sources":["context/index.js","adapters/index.js","App.js","context/ContextProvider.js","index.js","components/ModeBar.js","components/MDInputForm.js","helpers/createMarkdown.js","components/MDPreview.js","components/TableOfContents.js","components/MainViewer.js","routes/index.js","components/NewNoteModal.js","components/NotesDir.js","../markdown sync /^/.//.*/.md$","../markdown/code-snippet-test.md","../markdown/hapi-notes.md","../markdown/knex.md","../markdown/test.md"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","AppContext","n","React","createContext","notesUrl","NotesAdapter","title","require","includes","path","concat","fetch","then","response","text","catch","console","log","Promise","resolve","r","json","err","constructor","TypeError","files","options","method","headers","Content-Type","body","JSON","stringify","note","App","this","context","checkIfLocal","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_NotesDir__WEBPACK_IMPORTED_MODULE_8__","_routes__WEBPACK_IMPORTED_MODULE_9__","isLocal","_components_ModeBar__WEBPACK_IMPORTED_MODULE_11__","isEditMode","toggleEditMode","Component","contextType","hot","module","MyProvider","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","window","location","href","match","state","assign","react_default","src_context","Provider","value","props","children","ReactDOM","render","BrowserRouter","ContextProvider","document","getElementById","ModeBar","_this$props","id","onClick","MDInputForm","_setScroll","textArea","querySelector","setScroll","_setCursorIndex","setCursorIndex","onSubmit","handleSubmit","htmlFor","name","type","newNote","onChange","handleChange","onScroll","createMarkdown","cursorIndex","isSelectiveHighlight","markedEngine","renderer","Renderer","code","lang","highlightedCode","ind","indexOf","difference","Math","abs","highlightjs","getLanguage","highlight","highlightAuto","replace","setOptions","xhtml","configureRenderer","marked","md","MDPreview","el","scrollTop","scrollHeight","scroll","_this$props$note","markdown","ref","dangerouslySetInnerHTML","__html","TableOfContents","initState","contents","headings","map","padding","link","setContents","checkForHeadings","prevProps","section","idx","key","Note","e","defineProperty","target","preventDefault","update","objectSpread","oldTitle","params","fileName","redirectNewFile","loadFile","getOne","selectionStart","snapshot","components_MDInputForm","viewInfo","components_MDPreview","components_TableOfContents","Routes","Switch","Route","exact","component","MainViewer","NewNoteModal","create","res","msg","alert","Error","loadFiles","Redirect","to","toggleNewFileModal","NotesDir","list","isNewFileModalVisibile","test","components_NewNoteModal","file","Link","./code-snippet-test.md","./hapi-notes.md","./knex.md","./test.md","webpackContext","req","webpackContextResolve","keys","exports","p"],"mappings":"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","file":"static/js/main.83437c6d.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","const notesUrl = 'http://localhost:8100';\n\nclass NotesAdapter {\n    static getOne(title) {\n        const files = require('../files.json');\n        if (files.includes(title)) {\n            const path = require(`../../markdown/${title}.md`); // eslint-disable-line import/no-dynamic-require\n            return fetch(path)\n                .then(response => response.text())\n                .catch(console.log);\n        }\n        return Promise.resolve('# Missing File');\n    }\n\n    static list() {\n        return fetch(`${notesUrl}/notes`)\n            .then(r => r.json())\n            .catch((err) => {\n                /*\n                    if we're on GitHub, then we won't have access to the server,\n                    so we fall back to whatever the latest files.json\n                    A fetch error like this is a TypeError, if we somehow get\n                    another error, it will log it\n                */\n                if (err.constructor === TypeError) {\n                    const files = require('../files.json');\n                    return { files };\n                }\n                return err;\n            });\n    }\n\n    static create(title) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(title),\n        };\n\n\n        return fetch(`${notesUrl}/notes`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n\n    static update(note) {\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(note),\n        };\n        return fetch(`${notesUrl}/notes/${note.title}`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n}\n\nexport default NotesAdapter;\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport './App.css';\nimport NotesDir from './components/NotesDir';\nimport Routes from './routes';\nimport AppContext from './context';\nimport ModeBar from './components/ModeBar';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.context.checkIfLocal();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <NotesDir />\n                <Routes />\n                {\n                    this.context.isLocal ? <ModeBar\n                        isEditMode={ this.context.isEditMode }\n                        toggleEditMode={ this.context.toggleEditMode }\n                    /> : ''\n                }\n\n            </div>\n        );\n    }\n}\n\nApp.contextType = AppContext;\n\nexport default hot(module)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '.';\n\nclass MyProvider extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isEditMode: false,\n            isLocal: false,\n        };\n    }\n\n\n    toggleEditMode = () => {\n        this.setState(prevState => ({\n            isEditMode: !prevState.isEditMode,\n        }));\n    }\n\n    checkIfLocal = () => {\n        if (window.location.href.match('//localhost:')) {\n            this.setState({\n                isEditMode: true,\n                isLocal: true,\n            });\n        }\n    }\n\n    render() {\n        const context = Object.assign(\n            this.state,\n            {\n                toggleEditMode: this.toggleEditMode,\n                checkIfLocal: this.checkIfLocal,\n            },\n        );\n\n        return (\n            <AppContext.Provider value={ context }>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nMyProvider.propTypes = {\n    children: PropTypes.object,\n};\n\n\nexport default MyProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport MyProvider from './context/ContextProvider';\n\nReactDOM.render(\n    <BrowserRouter>\n        <MyProvider>\n            <App />\n        </MyProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ModeBar extends React.Component {\n    render() {\n        const { toggleEditMode, isEditMode } = this.props;\n        return (\n            <div id='mode-bar'>\n                <p>Currently in { isEditMode ? 'Editing' : 'Viewing' } mode</p>\n                <button onClick={ toggleEditMode }>Toggle</button>\n            </div>\n        );\n    }\n}\n\nModeBar.propTypes = {\n    toggleEditMode: PropTypes.func,\n    isEditMode: PropTypes.bool,\n};\n\nexport default ModeBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '../context';\n\nclass MDInputForm extends React.Component {\n    _setScroll = () => {\n        const textArea = document.querySelector('#text');\n        this.props.setScroll(textArea);\n    }\n\n    _setCursorIndex = () => {\n        const textArea = document.querySelector('#text');\n        this.props.setCursorIndex(textArea);\n    }\n\n    render() {\n        return (\n            <form\n                onSubmit={this.props.handleSubmit}\n            >\n                <label htmlFor=\"title\">title</label>\n                <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    value={this.props.newNote.title}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor=\"text\">text</label>\n                <textarea\n                    id=\"text\"\n                    name=\"text\"\n                    value={this.props.newNote.text}\n                    onChange={this.props.handleChange}\n                    onScroll={this._setScroll}\n                    onClick={this._setCursorIndex}\n                />\n                <button>Save</button>\n            </form>\n        );\n    }\n}\n\nMDInputForm.propTypes = {\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    setScroll: PropTypes.func,\n    setCursorIndex: PropTypes.func,\n    newNote: PropTypes.object,\n};\n\nMDInputForm.contextType = AppContext;\n\nexport default MDInputForm;\n","import marked from 'marked';\nimport highlightjs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nconst configureRenderer = (markedEngine, text, cursorIndex, isSelectiveHighlight) => {\n    /**  Create your custom renderer that uses highlight js\n     @param markedEngine: obj, the marked library object\n     @param text: str, text to be converted to markdown\n     @param cursorIndex: int, where the user places their cursor\n     @param isSelectiveHighlight: bool, avoids lagging on long files if true\n    */\n\n    const renderer = new markedEngine.Renderer();\n    renderer.code = (code, lang) => {\n        const ind = text.indexOf(code);\n        const difference = Math.abs(ind - cursorIndex);\n        if (!isSelectiveHighlight || difference < 2000) {\n            let highlightedCode;\n            if (lang && highlightjs.getLanguage(lang)) { // if there is a lang and it's highlight.js recognizes it\n                /*\n                    highlight(langaugeName, textToHighlight, igrnoreImproperSyntax)\n                    - it returns a full object, the highlighted code is inthe value property\n                */\n                highlightedCode = highlightjs.highlight(lang, code, true).value;\n                console.log('highlightedCode: ', highlightedCode);\n            } else {\n                highlightedCode = highlightjs.highlightAuto(code).value;\n            }\n            return `<pre><code class=\"hljs\">${highlightedCode}</code></pre>`;\n        }\n\n        return `<pre><code class=\"hljs\">${code.replace(/</g, '&lt;')}</code></pre>`;\n    };\n\n    markedEngine.setOptions({\n        renderer,\n        xhtml: false,\n    });\n};\n\nconst renderWelcome = () => {\n    /* create the welcome message */\n    return `\n# hello there\n## start adding markdown to get started\n- don't know where to start? check out the main help page I have yet to write\n- [This markdown crash course](http://blog.kugghuset.se/2015/11/20/markdown-crash-course.html) teaches you how to use it in like 5 minutes`;\n};\n\nconst createMarkdown = (text, cursorIndex, isSelectiveHighlight) => {\n    /* returns the final markdown */\n    configureRenderer(marked, text, cursorIndex, isSelectiveHighlight); // we only want marked to use special highlighing when not in edit mode\n    const md = text || renderWelcome();\n    return marked(md);\n};\n\nexport default createMarkdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport createMarkdown from '../helpers/createMarkdown';\nimport AppContext from '../context';\n\nclass MDPreview extends React.Component {\n    componentDidUpdate() {\n        this.el.scrollTop = this.el.scrollHeight * this.props.note.scroll;\n    }\n\n    render() {\n        const { title, text, cursorIndex } = this.props.note;\n        const markdown = createMarkdown(text, cursorIndex, this.context.isEditMode); // @TODO change this in the future with a button for context\n        return (\n            <div\n                id=\"md-preview\"\n                ref={(el) => { this.el = el; }}\n            >\n                <h1>Preview of: {title}</h1>\n                <div\n                    dangerouslySetInnerHTML={{ __html: markdown }}\n                    id=\"preview-text\"\n                ></div>\n            </div>\n        );\n    }\n}\n\nMDPreview.propTypes = {\n    note: PropTypes.object,\n};\n\nMDPreview.contextType = AppContext;\n\nexport default MDPreview;\n","import React from 'react';\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\n\nclass TableOfContents extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            contents: [],\n        };\n        this.state = this.initState;\n    }\n\n    setContents(headings) {\n        /* convert headings into table of contents */\n        const contents = headings.map((text) => {\n            const match = text.match(/<h(1|2|3) id=\"(.+)\">(.+)</);\n            return {\n                padding: match[1],\n                link: match[2],\n                text: match[3],\n            };\n        });\n        this.setState({ contents });\n    }\n\n    checkForHeadings() {\n        /* see if there are any headings to convert */\n        if (this.props.text) {\n            const headings = marked(this.props.text).match(/<h(?:1|2|3).+>.+</g);\n            if (headings) {\n                this.setContents(headings);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.checkForHeadings();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.text !== this.props.text) this.checkForHeadings();\n    }\n\n    render() {\n        return (\n            <div id=\"table-of-contents\">\n                <h3>Table of contents</h3>\n                <div id=\"contents\">\n                    <ul>\n                        {\n                            this.state.contents.map((section, idx) => (\n                                <li className={`padding-lvl-${section.padding}`} key={idx}>\n                                    <a href={`#${section.link}`}>{section.text}</a>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nTableOfContents.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default TableOfContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDInputForm from './MDInputForm';\nimport MDPreview from './MDPreview';\nimport TableOfContents from './TableOfContents';\nimport NotesAdapter from '../adapters';\nimport AppContext from '../context';\n\nclass Note extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            text: '',\n            scroll: 0,\n            cursorIndex: 0,\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.update({ ...this.state, oldTitle: this.props.match.params.fileName })\n            .then(() => {\n                if (!this.props.match.params.fileName) this.setState({ redirectNewFile: true });\n            });\n    }\n\n    loadFile = (title) => {\n        NotesAdapter.getOne(title)\n            .then((text) => {\n                this.setState({ title, text });\n            });\n    }\n\n    // handles initial load of the page\n    componentDidMount() {\n        if (this.props.match.params.fileName) this.loadFile(this.props.match.params.fileName);\n    }\n\n    setScroll = (textArea) => {\n        const scroll = textArea.scrollTop / textArea.scrollHeight;\n        this.setState({ scroll });\n    }\n\n    setCursorIndex = (textArea) => {\n        this.setState({\n            cursorIndex: textArea.selectionStart,\n        });\n    }\n\n    // handles every time we switch notes\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.fileName !== prevProps.match.params.fileName) {\n            if (this.props.match.params.fileName) {\n                this.loadFile(this.props.match.params.fileName);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"main-viewer\">\n                {\n                    this.context.isEditMode ?\n                        <MDInputForm\n                            handleChange = {this.handleChange}\n                            handleSubmit = {this.handleSubmit}\n                            newNote = {this.state}\n                            viewInfo={this.context}\n                            toggleEditMode={this.props.toggleEditMode}\n                            setScroll = {this.setScroll}\n                            setCursorIndex = {this.setCursorIndex}\n                        /> : ''\n                }\n                <MDPreview\n                    note = {this.state}\n                />\n                {\n                    !this.context.isEditMode ? <TableOfContents text={this.state.text} /> : ''\n                }\n            </div>\n        );\n    }\n}\n\nNote.propTypes = {\n    match: PropTypes.object,\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nNote.contextType = AppContext;\n\nexport default Note;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport MainViewer from '../components/MainViewer';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                exact path='/' // TODO make actual welcome component\n                component = { MainViewer }\n            />\n            <Route\n                exact path='/notes/:fileName'\n                component = { MainViewer }\n            />\n            <Route\n                exact path='*'\n                component = { MainViewer }\n            />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nexport default Routes;\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\n\nclass NewNoteModal extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            redirectNewFile: false,\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.create(this.state)\n            .then((res) => {\n                if (res.msg) {\n                    alert(res.msg); // eslint-disable-line\n                    throw new Error('Already Created the file');\n                }\n            })\n            .then(() => {\n                this.props.loadFiles();\n                this.setState({ redirectNewFile: true });\n            })\n            .catch(console.log);\n    }\n\n    shouldComponentUpdate(prevState) {\n        return this.state.title !== prevState.title;\n    }\n\n    render() {\n        // this rerenders one too many times so we wind up redirecting twice before the modal finally disapears, not sure why it ever does\n        if (this.state.redirectNewFile) {\n            return <Redirect to={`/notes/${this.state.title}`}/>;\n        }\n\n        return (\n            <div id=\"new-file-modal\">\n                <h1>I am the new file modal</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>File Name</label>\n                    <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n                    <p>Warning: creating a new file will destroy any unsaved changes. Be sure to save your current file</p>\n                    <button onClick={ this.props.toggleNewFileModal }>Cancel</button>\n                    <button>Create</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nNewNoteModal.propTypes = {\n    toggleNewFileModal: PropTypes.func,\n    loadFiles: PropTypes.func,\n};\n\nexport default NewNoteModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\nimport NewNoteModal from './NewNoteModal';\nimport AppContext from '../context';\n\n\nclass NotesDir extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            files: [],\n            isNewFileModalVisibile: false,\n        };\n    }\n\n    loadFiles = () => {\n        NotesAdapter.list().then(files => this.setState(files));\n    }\n\n    componentDidMount() {\n        this.loadFiles();\n    }\n\n    toggleNewFileModal = () => {\n        this.setState(prevState => ({\n            isNewFileModalVisibile: !prevState.isNewFileModalVisibile,\n        }));\n    }\n\n    render() {\n        return (\n            <div id=\"notes-dir\">\n                <h1>Files</h1>\n                <h2>{this.context.test}</h2>\n                { this.context.isEditMode ? <button onClick={this.toggleNewFileModal}>New File</button> : '' }\n                {\n                    this.state.isNewFileModalVisibile ? <NewNoteModal\n                        toggleNewFileModal={this.toggleNewFileModal}\n                        loadFiles={this.loadFiles}\n                    /> : ''\n                }\n                { this.state.files.map((file, idx) => <Link to={`/notes/${file}`} key={idx}>{file}</Link>) }\n            </div>\n        );\n    }\n}\n\nNotesDir.propTypes = {\n    viewInfo: PropTypes.object,\n};\n\nNotesDir.contextType = AppContext;\n\nexport default NotesDir;\n","var map = {\n\t\"./code-snippet-test.md\": 40,\n\t\"./hapi-notes.md\": 41,\n\t\"./knex.md\": 42,\n\t\"./test.md\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/code-snippet-test.0e11300f.md\";","module.exports = __webpack_public_path__ + \"static/media/hapi-notes.94945a88.md\";","module.exports = __webpack_public_path__ + \"static/media/knex.9ecfae0a.md\";","module.exports = __webpack_public_path__ + \"static/media/test.199aa2f5.md\";"],"sourceRoot":""}