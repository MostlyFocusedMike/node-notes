{"version":3,"sources":["context/index.js","adapters/index.js","components/ModeBar.js","context/ContextProvider.js","index.js","App.js","components/MDInputForm.js","helpers/toggleHighlighting.js","helpers/createMarkdown.js","components/MDPreview.js","components/TableOfContents.js","components/Note.js","routes/index.js","components/NewNoteModal.js","components/NotesDir.js","../markdown sync /^/.//.*/.md$","../markdown/code-snippet-test-1.md","../markdown/hapi-notes.md","../markdown/knex.md","../markdown/test.md"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","AppContext","n","React","createContext","notesUrl","NotesAdapter","title","require","includes","path","concat","fetch","then","response","text","catch","console","log","Promise","resolve","r","json","err","constructor","TypeError","files","options","method","headers","Content-Type","body","JSON","stringify","note","ModeBar","_this$props","this","props","toggleEditMode","isEditMode","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","onClick","Component","MyProvider","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","prevState","checkIfLocal","window","location","href","match","isLocal","state","context","assign","react_default","src_context","Provider","value","children","ReactDOM","render","BrowserRouter","ContextProvider","App","document","getElementById","Fragment","className","_components_NotesDir__WEBPACK_IMPORTED_MODULE_8__","_routes__WEBPACK_IMPORTED_MODULE_9__","_components_ModeBar__WEBPACK_IMPORTED_MODULE_11__","contextType","hot","module","MDInputForm","onSubmit","handleSubmit","htmlFor","name","type","newNote","onChange","handleChange","toggleHighlighting","marked","useHighlighting","renderer","Renderer","code","lang","highlightedCode","highlightjs","getLanguage","highlight","highlightAuto","setOptions","xhtml","useHighlightRenderer","useDefaultRenderer","createMarkdown","md","MDPreview","_this$props$note","markdown","dangerouslySetInnerHTML","__html","TableOfContents","initState","contents","headings","map","padding","link","setContents","checkForHeadings","prevProps","section","idx","key","Note","e","defineProperty","target","preventDefault","update","objectSpread","oldTitle","params","fileName","redirectNewFile","_this2","getOne","loadFile","snapshot","components_MDInputForm","viewInfo","components_MDPreview","components_TableOfContents","Routes","Switch","Route","exact","component","NewNoteModal","create","res","msg","alert","Error","Redirect","to","toggleNewFileModal","NotesDir","isNewFileModalVisibile","list","loadFiles","test","components_NewNoteModal","file","Link","./code-snippet-test-1.md","./hapi-notes.md","./knex.md","./test.md","webpackContext","req","webpackContextResolve","keys","exports","p"],"mappings":"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","file":"static/js/main.9ef423dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","const notesUrl = 'http://localhost:8100';\n\nclass NotesAdapter {\n    static getOne(title) {\n        const files = require('../files.json');\n        if (files.includes(title)) {\n            const path = require(`../../markdown/${title}.md`); // eslint-disable-line import/no-dynamic-require\n            return fetch(path)\n                .then(response => response.text())\n                .catch(console.log);\n        }\n        return Promise.resolve('# Missing File');\n    }\n\n    static list() {\n        return fetch(`${notesUrl}/notes`)\n            .then(r => r.json())\n            .catch((err) => {\n                /*\n                    if we're on GitHub, then we won't have access to the server,\n                    so we fall back to whatever the latest files.json\n                    A fetch error like this is a TypeError, if we somehow get\n                    another error, it will log it\n                */\n                if (err.constructor === TypeError) {\n                    const files = require('../files.json');\n                    return { files };\n                }\n                return err;\n            });\n    }\n\n    static create(title) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(title),\n        };\n\n\n        return fetch(`${notesUrl}/notes`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n\n    static update(note) {\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(note),\n        };\n        return fetch(`${notesUrl}/notes/${note.title}`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n}\n\nexport default NotesAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ModeBar extends React.Component {\n    render() {\n        const { toggleEditMode, isEditMode } = this.props;\n        return (\n            <div id='mode-bar'>\n                <p>Currently in { isEditMode ? 'Editing' : 'Viewing' } mode</p>\n                <button onClick={ toggleEditMode }>Toggle</button>\n            </div>\n        );\n    }\n}\n\nModeBar.propTypes = {\n    toggleEditMode: PropTypes.func,\n    isEditMode: PropTypes.object,\n};\n\nexport default ModeBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '.';\n\nclass MyProvider extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isEditMode: false,\n            isLocal: false,\n        };\n    }\n\n\n    toggleEditMode = () => {\n        this.setState(prevState => ({\n            isEditMode: !prevState.isEditMode,\n        }));\n    }\n\n    checkIfLocal = () => {\n        if (window.location.href.match('//localhost:')) {\n            console.log('I ran');\n            this.setState({\n                isEditMode: true,\n                isLocal: true,\n            });\n        }\n    }\n\n    render() {\n        const context = Object.assign(\n            this.state,\n            {\n                toggleEditMode: this.toggleEditMode,\n                checkIfLocal: this.checkIfLocal,\n            },\n        );\n\n        return (\n            <AppContext.Provider value={ context }>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nMyProvider.propTypes = {\n    children: PropTypes.object,\n};\n\n\nexport default MyProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport MyProvider from './context/ContextProvider';\n\nReactDOM.render(\n    <BrowserRouter>\n        <MyProvider>\n            <App />\n        </MyProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport './App.css';\nimport NotesDir from './components/NotesDir';\nimport Routes from './routes';\nimport AppContext from './context';\nimport ModeBar from './components/ModeBar';\n\nclass App extends React.Component {\n    state = {\n        render: true,\n    }\n\n    componentDidMount() {\n        this.context.checkIfLocal();\n    }\n\n    render() {\n        console.log('editmode: ', this.context.isEditMode);\n        return (\n            <React.Fragment >\n                {\n                    this.state.render ? <div className=\"App\">\n                        <NotesDir />\n                        <Routes />\n                        {\n                            this.context.isLocal ? <ModeBar\n                                isEditMode={ this.context.isEditMode }\n                                toggleEditMode={ this.context.toggleEditMode }\n                            /> : ''\n                        }\n\n                    </div> : ''\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nApp.contextType = AppContext;\n\nexport default hot(module)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MDInputForm extends React.Component {\n    render() {\n        return (\n            <form\n                onSubmit={this.props.handleSubmit}\n            >\n                <label htmlFor=\"title\">title</label>\n                <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    value={this.props.newNote.title}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor=\"text\">text</label>\n                <textarea\n                    id=\"text\"\n                    name=\"text\"\n                    value={this.props.newNote.text}\n                    onChange={this.props.handleChange}\n                />\n                <button>Save</button>\n            </form>\n        );\n    }\n}\n\nMDInputForm.propTypes = {\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    newNote: PropTypes.object,\n};\n\nexport default MDInputForm;\n","import { Renderer } from 'marked';\nimport highlightjs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nconst useHighlightRenderer = (marked) => {\n    /* Create your custom renderer that uses highlight js on the code blocks */\n    const renderer = new Renderer();\n    renderer.code = (code, lang) => {\n        let highlightedCode;\n        if (lang && highlightjs.getLanguage(lang)) {\n            /*\n                the highlight() signature is:\n                highlight(langaugeName, textToHighlight,g igrnoreImproperSyntax)\n                it returns a full object, but the highlighted code is inthe value property\n            */\n            highlightedCode = highlightjs.highlight(lang, code, true).value;\n        } else {\n            highlightedCode = highlightjs.highlightAuto(code).value;\n        }\n\n        return `<pre><code class=\"hljs\">${highlightedCode}</code></pre>`;\n    };\n    marked.setOptions({\n        renderer,\n        xhtml: false,\n    });\n};\n\nconst useDefaultRenderer = (marked) => {\n    /* Reset the renderer back to normal  */\n    marked.setOptions({ renderer: new Renderer() });\n};\n\nconst toggleHighlighting = (marked, useHighlighting) => {\n    /* highlighting can't run while in edit mode, this turns it on and off */\n    if (useHighlighting) {\n        useHighlightRenderer(marked);\n    } else {\n        useDefaultRenderer(marked);\n    }\n};\n\nexport default toggleHighlighting;\n","import marked from 'marked';\nimport toggleHighlighting from './toggleHighlighting';\n\nconst renderWelcome = () => {\n    /* create the welcome message */\n    return `\n# hello there\n## start adding markdown to get started\n- don't know where to start? check out the main help page I have yet to write\n- [This markdown crash course](http://blog.kugghuset.se/2015/11/20/markdown-crash-course.html) teaches you how to use it in like 5 minutes`;\n};\n\nconst createMarkdown = (text, useHighlighting) => {\n    /* returns the final markdown */\n    toggleHighlighting(marked, useHighlighting); // we only want marked to use special highlighing when not in edit mode\n    const md = text || renderWelcome();\n    return marked(md);\n};\n\nexport default createMarkdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport createMarkdown from '../helpers/createMarkdown';\n\nclass MDPreview extends React.Component {\n    render() {\n        const { title, text } = this.props.note;\n        const markdown = createMarkdown(text, true); // @TODO change this in the future with a button for context\n        return (\n            <div id=\"md-preview\">\n                <h1>Preview of: {title}</h1>\n                <div dangerouslySetInnerHTML={{ __html: markdown }}></div>\n            </div>\n        );\n    }\n}\n\nMDPreview.propTypes = {\n    note: PropTypes.object,\n};\n\nexport default MDPreview;\n","import React from 'react';\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\n\nclass TableOfContents extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            contents: [],\n        };\n        this.state = this.initState;\n    }\n\n    setContents(headings) {\n        /* convert headings into table of contents */\n        const contents = headings.map((text) => {\n            const match = text.match(/<h(1|2|3) id=\"(.+)\">(.+)</);\n            return {\n                padding: match[1],\n                link: match[2],\n                text: match[3],\n            };\n        });\n        this.setState({ contents });\n    }\n\n    checkForHeadings() {\n        /* see if there are any headings to convert */\n        if (this.props.text) {\n            const headings = marked(this.props.text).match(/<h(?:1|2|3).+>.+</g);\n            if (headings) {\n                this.setContents(headings);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.checkForHeadings();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.text !== this.props.text) this.checkForHeadings();\n    }\n\n    render() {\n        return (\n            <div id=\"table-of-contents\">\n                <h3>Table of contents</h3>\n                <div id=\"contents\">\n                    <ul>\n                        {\n                            this.state.contents.map((section, idx) => (\n                                <li className={`padding-lvl-${section.padding}`} key={idx}>\n                                    <a href={`#${section.link}`}>{section.text}</a>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nTableOfContents.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default TableOfContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDInputForm from './MDInputForm';\nimport MDPreview from './MDPreview';\nimport ModeBar from './ModeBar';\nimport TableOfContents from './TableOfContents';\nimport NotesAdapter from '../adapters';\nimport AppContext from '../context';\n\nclass Note extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            text: '',\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.update({ ...this.state, oldTitle: this.props.match.params.fileName })\n            .then(() => {\n                if (!this.props.match.params.fileName) this.setState({ redirectNewFile: true });\n            });\n    }\n\n    loadFile(title) {\n        NotesAdapter.getOne(title)\n            .then((text) => {\n                this.setState({ title, text });\n            });\n    }\n\n    // handles initial load of the page\n    componentDidMount() {\n        if (this.props.match.params.fileName) this.loadFile(this.props.match.params.fileName);\n    }\n\n    // handles every time we switch notes\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.fileName !== prevProps.match.params.fileName) {\n            if (this.props.match.params.fileName) {\n                this.loadFile(this.props.match.params.fileName);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"note\">\n                {\n                    this.context.isEditMode ?\n                        <MDInputForm\n                            handleChange = {this.handleChange}\n                            handleSubmit = {this.handleSubmit}\n                            newNote = {this.state}\n                            viewInfo={this.context}\n                            toggleEditMode={this.props.toggleEditMode}\n                        /> : ''\n                }\n                <MDPreview note = {this.state} />\n                {\n                    !this.context.isEditMode ? <TableOfContents text={this.state.text} /> : ''\n                }\n            </div>\n        );\n    }\n}\n\nNote.propTypes = {\n    match: PropTypes.object,\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nNote.contextType = AppContext;\n\nexport default Note;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport Note from '../components/Note';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                exact path='/' // TODO make actual welcome component\n                component = { Note }\n            />\n            <Route\n                exact path='/notes/:fileName'\n                component = { Note }\n            />\n            <Route\n                exact path='*'\n                component = { Note }\n            />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nexport default Routes;\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\n\nclass NewNoteModal extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            redirectNewFile: false,\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.create(this.state)\n            .then((res) => {\n                if (res.msg) {\n                    alert(res.msg);\n                    throw new Error('Already Created the file');\n                }\n            })\n            .then(() => {\n                this.setState({ redirectNewFile: true });\n            })\n            .catch(console.log);\n    }\n\n    shouldComponentUpdate(prevState) {\n        return this.state.title !== prevState.title;\n    }\n\n    render() {\n        // this rerenders one too many times so we wind up redirecting twice before the modal finally disapears, not sure why it ever does\n        if (this.state.redirectNewFile) {\n            return <Redirect to={`/notes/${this.state.title}`}/>;\n        }\n\n        return (\n            <div id=\"new-file-modal\">\n                <h1>I am the new file modal</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>File Name</label>\n                    <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n                    <p>Warning: creating a new file will destroy any unsaved changes. Be sure to save your current file</p>\n                    <button onClick={ this.props.toggleNewFileModal }>Cancel</button>\n                    <button>Create</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nNewNoteModal.propTypes = {\n    toggleNewFileModal: PropTypes.func,\n};\n\nexport default NewNoteModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\nimport NewNoteModal from './NewNoteModal';\nimport AppContext from '../context';\n\n\nclass NotesDir extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            files: [],\n            isNewFileModalVisibile: false,\n        };\n    }\n\n    loadFiles() {\n        NotesAdapter.list().then(files => this.setState(files));\n    }\n\n    componentDidMount() {\n        this.loadFiles();\n    }\n\n    toggleNewFileModal = () => {\n        this.setState(prevState => ({\n            isNewFileModalVisibile: !prevState.isNewFileModalVisibile,\n        }));\n    }\n\n    render() {\n        return (\n            <div id=\"notes-dir\">\n                <h1>Files</h1>\n                <h2>{this.context.test}</h2>\n                { this.context.isEditMode ? <button onClick={this.toggleNewFileModal}>New File</button> : '' }\n                { this.state.isNewFileModalVisibile ? <NewNoteModal toggleNewFileModal={this.toggleNewFileModal} /> : '' }\n                { this.state.files.map((file, idx) => <Link to={`/notes/${file}`} key={idx}>{file}</Link>) }\n            </div>\n        );\n    }\n}\n\nNotesDir.propTypes = {\n    viewInfo: PropTypes.object,\n};\n\nNotesDir.contextType = AppContext;\n\nexport default NotesDir;\n","var map = {\n\t\"./code-snippet-test-1.md\": 40,\n\t\"./hapi-notes.md\": 41,\n\t\"./knex.md\": 42,\n\t\"./test.md\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 39;","module.exports = __webpack_public_path__ + \"static/media/code-snippet-test-1.a05c396b.md\";","module.exports = __webpack_public_path__ + \"static/media/hapi-notes.94945a88.md\";","module.exports = __webpack_public_path__ + \"static/media/knex.9ecfae0a.md\";","module.exports = __webpack_public_path__ + \"static/media/test.199aa2f5.md\";"],"sourceRoot":""}