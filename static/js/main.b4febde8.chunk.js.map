{"version":3,"sources":["../backend/markdown sync /^/.//.*/.md$","../backend/markdown/another-test.md","../backend/markdown/fifth.md","../backend/markdown/fourth-test.md","../backend/markdown/test.md","../backend/markdown/third-test.md","adapters/index.js","components/MDImportForm.js","components/MDPreview.js","App.js","serviceWorker.js","index.js"],"names":["map","./another-test.md","./fifth.md","./fourth-test.md","./test.md","./third-test.md","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","NotesAdapter","classCallCheck","this","createClass","key","value","route","fetch","concat","then","r","json","note","options","method","headers","Content-Type","body","JSON","stringify","MDInputForm","_this","possibleConstructorReturn","getPrototypeOf","call","handleChange","setState","newNote","objectSpread","state","defineProperty","target","name","handleSubmit","preventDefault","create","handleClear","initState","title","text","react_default","a","createElement","onChange","onSubmit","htmlFor","type","onClick","React","Component","MDPreview","markdown","_this2","files","require","console","log","i","length","path","response","prevState","marked","dangerouslySetInnerHTML","__html","App","className","MDImportForm","components_MDPreview","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4febde8.chunk.js","sourcesContent":["var map = {\n\t\"./another-test.md\": 23,\n\t\"./fifth.md\": 24,\n\t\"./fourth-test.md\": 25,\n\t\"./test.md\": 26,\n\t\"./third-test.md\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;","module.exports = __webpack_public_path__ + \"static/media/another-test.d62f1558.md\";","module.exports = __webpack_public_path__ + \"static/media/fifth.acebaeab.md\";","module.exports = __webpack_public_path__ + \"static/media/fourth-test.684123aa.md\";","module.exports = __webpack_public_path__ + \"static/media/test.5a9a6137.md\";","module.exports = __webpack_public_path__ + \"static/media/third-test.35b0203d.md\";","const notesUrl = \"http://localhost:8100\"\n\nexport class NotesAdapter {\n  static getOne(route) {\n    return fetch(`${notesUrl}/notes/${route}`).then(r=>r.json())\n  }\n  static create(note) {\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    return fetch(`${notesUrl}/notes`, options)\n      .then(r => r.json())\n  }\n}","import React from 'react'\nimport {NotesAdapter} from '../adapters'\n\n\nclass MDInputForm extends React.Component {\n  constructor() {\n    super()\n    this.initState = {\n      newNote: {\n        title: \"\",\n        text: \"\",\n      }\n    }\n    this.state = this.initState\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      newNote: {\n      ...this.state.newNote,\n      [e.target.name]: e.target.value\n      }\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    NotesAdapter.create(this.state)\n    this.handleClear(e)\n  }\n\n  handleClear = (e) => {\n    e.preventDefault()\n    this.setState(this.initState)\n  }\n\n\n  render() {\n    return (\n      <form \n        onChange={this.handleChange} \n        onSubmit={this.handleSubmit}\n      >\n        <p>tester: {this.state.newNote.text}</p>\n        <label htmlFor=\"title\">title</label>\n        <input \n          id=\"title\" \n          name=\"title\" \n          type=\"text\"\n          value={this.state.newNote.title}\n        /> \n        <label htmlFor=\"text\">text</label>\n        <textarea \n          id=\"text\" \n          name=\"text\"\n          value={this.state.newNote.text}\n        />\n        <button>Submit</button>\n        <button onClick={this.handleClear}>Clear</button>\n      </form>\n    )\n  }\n}\n\nexport default MDInputForm","import React from 'react'\nimport marked from 'marked'\n\nclass MDPreview extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      markdown: \"\"\n    }\n  }\n\n  componentWillMount() {\n    const files = require('../files.json')\n    console.log(files)\n\n    for (let i=0; i < files.length; i++) {\n      let path = require(\"../../backend/markdown/\" + files[i] + \".md\");\n      fetch(path)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {\n        this.setState((prevState) => ({\n          markdown: prevState.markdown + marked(text)\n        }));\n      })\n    }\n\n\n  }\n  render() {\n    const { markdown } = this.state;\n    return (\n      <div>\n        <h1>Preview</h1>\n        <section>\n          <article dangerouslySetInnerHTML={{__html: markdown}}></article>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default MDPreview","import React, { Component } from 'react';\nimport './App.css';\nimport MDImportForm from './components/MDImportForm'\nimport MDPreview from './components/MDPreview'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MDImportForm />\n        <MDPreview />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}