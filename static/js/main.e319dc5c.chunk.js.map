{"version":3,"sources":["../markdown sync /^/.//.*/.md$","../markdown/hapi-notes.md","../markdown/hapi-pal.md","../markdown/javascript.md","adapters/index.js","components/NewNoteModal.js","components/NotesDir.js","components/MDInputForm.js","components/MDPreview.js","components/ModeBar.js","components/TableOfContents.js","components/Note.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["map","./hapi-notes.md","./hapi-pal.md","./javascript.md","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","notesUrl","NotesAdapter","route","fetch","concat","then","r","json","title","options","method","headers","Content-Type","body","JSON","stringify","catch","console","log","note","text","NewNoteModal","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","setState","defineProperty","target","name","value","sleep","time","Promise","setTimeout","handleSubmit","preventDefault","create","state","res","msg","alert","redirectNewFile","componentDidUpdate","initState","react_default","a","createElement","Redirect","to","onSubmit","type","onChange","onClick","props","toggleNewFileModal","React","Component","NotesDir","prevState","isNewFileModalVisibile","files","require","reload","viewInfo","editing","local","isEditMode","components_NewNoteModal","file","idx","Link","key","MDInputForm","htmlFor","newNote","MDPreview","markdown","_this$props$note","md","renderWelcome","marked","dangerouslySetInnerHTML","__html","ModeBar","toggleEdit","TableOfContents","sections","match","link","loadContents","prevProps","section","href","Note","update","objectSpread","oldTitle","params","fileName","redirectMissingFile","_this2","path","response","loadFile","err","snapshot","className","components_MDInputForm","components_MDPreview","components_TableOfContents","components_ModeBar","Routes","Switch","Route","exact","render","components_Note","assign","App","window","location","components_NotesDir","routes","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e319dc5c.chunk.js","sourcesContent":["var map = {\n\t\"./hapi-notes.md\": 35,\n\t\"./hapi-pal.md\": 36,\n\t\"./javascript.md\": 37\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 34;","module.exports = __webpack_public_path__ + \"static/media/hapi-notes.310f1f4c.md\";","module.exports = __webpack_public_path__ + \"static/media/hapi-pal.d41d8cd9.md\";","module.exports = __webpack_public_path__ + \"static/media/javascript.d41d8cd9.md\";","const notesUrl = \"http://localhost:8100\"\n\nclass NotesAdapter {\n  static getOne(route) {\n    return fetch(`${notesUrl}/notes/${route}`).then(r=>r.json())\n  }\n\n  static create(title) {\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(title)\n    }\n    return fetch(`${notesUrl}/notes`, options)\n      .then(r => r.json())\n      .catch(console.log)\n  }\n\n  static update(note) {\n    let options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    console.log('Note in update:', note)\n    return fetch(`${notesUrl}/notes/${note.title}`, options)\n      .then(r => r.json())\n  }\n\n\n  static reload(route) {\n    let options = {\n      method: 'PUT',\n    }\n    return fetch(`${notesUrl}/reload`, options)\n      .then(r=>r.text())\n  }\n}\n\nexport default NotesAdapter","import React from 'react'\nimport NotesAdapter from '../adapters'\nimport { Redirect } from 'react-router'\n\nclass NewNoteModal extends React.Component {\n  constructor() {\n    super() \n    this.initState = {\n      title: \"\",\n      redirectNewFile: false,\n    }\n    this.state = this.initState\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  sleep = (time) => {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    NotesAdapter.create(this.state)\n      .then((res) => {\n        if (res.msg) {\n          alert(res.msg)\n        } else {\n          this.sleep(100).then(() => { // I give up trying to solve the race condition for now.\n            this.setState({redirectNewFile: true})\n          })\n        }\n      })\n  }\n\n  componentDidUpdate =() => {\n    if (this.state.redirectNewFile) {\n      this.setState({\n        redirectNewFile: false\n      })\n    }\n  }\n\n  render() {\n    if (this.state.redirectNewFile) {\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      return <Redirect to={`/notes/${this.state.title}`}/>;\n    }\n    return (\n      <div id=\"new-file-modal\">\n        <h1>I am the new file modal</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>File Name</label>\n          <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n          <p>Warning: creating a new file will destroy any unsaved changes. Be sure to save your current file</p>\n          <button onClick={this.props.toggleNewFileModal}>Cancel</button>\n          <button>Create</button>\n        </form>\n      </div> \n    )\n  }\n}\n\nexport default NewNoteModal","import React from 'react'\nimport NotesAdapter from '../adapters'\nimport NewNoteModal from './NewNoteModal'\nimport { Link } from \"react-router-dom\";\n\nclass NotesDir extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      files: [],\n      isNewFileModalVisibile: false,\n    }\n  }\n\n  componentWillMount() {\n    const files = require('../files.json')\n    this.setState({files})\n  }\n\n  reload() {\n    NotesAdapter.reload()\n  }\n\n  isEditMode() {\n    return this.props.viewInfo.editing && this.props.viewInfo.local \n  }\n\n  toggleNewFileModal = () => {\n    console.log('hello')\n    this.setState((prevState) => ({\n      isNewFileModalVisibile: !prevState.isNewFileModalVisibile\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"notes-dir\">\n        <h1>Files</h1>\n        { this.isEditMode() ? <button onClick={this.toggleNewFileModal}>New File</button> : \"\" }\n        { this.state.isNewFileModalVisibile ? <NewNoteModal toggleNewFileModal={this.toggleNewFileModal} /> : \"\" }\n        { this.state.files.map((file, idx) =>  <Link to={`/notes/${file}`} key={idx}>{file}</Link>) }\n        { this.isEditMode() ? <button onClick={this.reload}>Reload</button> : \"\" }\n      </div>\n    )\n  }\n}\n\nexport default NotesDir","import React from 'react'\n\nclass MDInputForm extends React.Component {\n  render() {\n    return (\n      <form \n        onChange={this.props.handleChange} \n        onSubmit={this.props.handleSubmit}\n      >\n        <label htmlFor=\"title\">title</label>\n        <input \n          id=\"title\" \n          name=\"title\" \n          type=\"text\"\n          value={this.props.newNote.title}\n        /> \n        <label htmlFor=\"text\">text</label>\n        <textarea \n          id=\"text\" \n          name=\"text\"\n          value={this.props.newNote.text}\n        />\n        <button>Save</button>\n      </form>\n    )\n  }\n}\n\nexport default MDInputForm","import React from 'react'\nimport marked from 'marked'\n\nclass MDPreview extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      markdown: \"\"\n    }\n  }\n\n  renderWelcome() {\n    return \"# hello there \\n ## start adding markdown to get started\"\n  }\n\n  render() {\n    const { title, text } = this.props.note;\n    const md = text || this.renderWelcome();\n    const markdown = marked(md)\n    return (\n      <div id=\"md-preview\">\n        <h1>Preview of: {title}</h1>\n        <div dangerouslySetInnerHTML={{__html: markdown}}></div>\n      </div>\n    )\n  }\n}\n\nexport default MDPreview","import React from 'react'\n\nclass ModeBar extends React.Component {\n  render() {\n    return (\n      <div id=\"mode-bar\">\n        <p>Currently in {this.props.viewInfo.editing ? \"Editing\" : \"Viewing\"} mode</p>\n        <button onClick={this.props.toggleEdit}>Toggle</button>\n      </div>\n    )\n  }\n}\n\nexport default ModeBar","import React from \"react\"\nimport marked from \"marked\"\n\nclass TableOfContents extends React.Component {\n  constructor() {\n    super() \n    this.initState = {\n      sections: []\n    }\n    this.state = this.initState\n  }\n\n  loadContents() {\n    if (this.props.text) {\n      let sections = marked(this.props.text).match(/<h1.+>.+</g).map(text => {\n        let match = text.match(/<h1 id=\"(.+)\">(.+)</)\n        return {\n          link: match[1],\n          text: match[2]\n        }\n      })\n      this.setState({ sections })\n    }\n  }\n\n  componentDidMount() {\n    this.loadContents()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.text !== this.props.text) {\n      this.loadContents()\n    }\n  }\n  render() {\n    return (\n      <div id=\"table-of-contents\"> \n        <p>Table of contents</p>\n        {\n          this.state.sections.map(section => <a href={`#${section.link}`}>{section.text}</a>)\n        }\n      </div>\n\n    )\n  }\n}\n\nexport default TableOfContents","import React from 'react';\nimport MDInputForm from './MDInputForm'\nimport MDPreview from './MDPreview'\nimport ModeBar from './ModeBar'\nimport TableOfContents from './TableOfContents'\nimport NotesAdapter from '../adapters'\nimport { Redirect } from 'react-router'\n\nclass Note extends React.Component {\n\n  constructor() {\n    super()\n    this.initState = {\n      title: \"\",\n      text: \"\",\n      redirectNewFile: false,\n      redirectMissingFile: false,\n    }\n    this.state = this.initState;\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('update it', )\n    NotesAdapter.update({...this.state, oldTitle: this.props.match.params.fileName})\n      .then(() => {\n        if (!this.props.match.params.fileName) this.setState({ redirectNewFile: true })\n      })\n  }\n\n  loadFile(title) {\n    let path = require('../../markdown/' + title + \".md\")\n    fetch(path)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {   \n        this.setState((prevState) => ({\n          title,\n          text,\n        }));\n      })\n  }\n\n  // handles initial load of the page \n  componentDidMount() {\n    console.log('mount')\n    try {\n      if (this.props.match.params.fileName) { \n        this.loadFile(this.props.match.params.fileName) \n      }\n    } catch (err) {\n      console.log('couldnt find the file')\n      this.setState({ redirectMissingFile: true })\n    }\n  }\n\n  // handles every time we switch notes\n  componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.match.params.fileName !== prevProps.match.params.fileName) {\n        if (this.props.match.params.fileName) {\n          this.loadFile(this.props.match.params.fileName)\n        } else {\n          this.setState(this.initState)\n        }\n      }\n      if (this.state.redirectMissingFile) {\n        this.setState(this.initState)\n      }\n  }\n\n  render() {\n    if (this.state.redirectNewFile) {\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      console.log('redirected new file')\n      return <Redirect to={`/notes/${this.state.title}`}/>;\n    }\n    if (this.state.redirectMissingFile) {\n      console.log('redirected missing file')\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      return <Redirect to=\"/\"/>;\n    }\n    return (\n      <div className=\"note\">\n        {\n          this.props.viewInfo.editing ? \n            <MDInputForm \n            handleChange = {this.handleChange}\n            handleSubmit = {this.handleSubmit}\n            newNote = {this.state}\n            viewInfo={this.props.viewInfo}\n            toggleEdit={this.props.toggleEdit}\n          /> : \"\"\n          \n        }\n        <MDPreview \n          note = {this.state}\n          viewInfo={this.props.viewInfo}\n        />\n        {\n          !this.props.viewInfo.editing ? \n          <TableOfContents text={this.state.text} /> : \"\"\n        }\n        {\n          this.props.viewInfo.local ?\n          <ModeBar \n            viewInfo={this.props.viewInfo}\n            toggleEdit={this.props.toggleEdit}\n          /> : \"\"\n        }\n      </div>\n    );\n  }\n}\n\nexport default Note","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport Note from '../components/Note'\n\nconst Routes = (props) => {\n  const {viewInfo, toggleEdit} = props\n  return (\n    <Switch>\n      <Route \n        exact path=\"/\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n      <Route \n        exact path=\"/notes/:fileName\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n      <Route \n        exact path=\"*\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n    </Switch>\n  )\n}\n\nexport default Routes","import React from 'react';\nimport './App.css';\nimport NotesDir from './components/NotesDir'\nimport Routes from './routes'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.initState = {\n      editing: false,\n      local: false \n    }\n    this.state = this.initState\n  }\n\n  toggleEdit = () => {\n    this.setState((prevState) => ({\n      editing: !prevState.editing\n    }));\n  }\n\n  componentDidMount() {\n    if (window.location.href.match(\"//localhost:\")) {\n      console.log('hello', window.location.href)\n      this.setState({\n        local: true,\n        editing: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NotesDir \n          viewInfo={this.state}\n        />\n        <Routes \n          viewInfo = {this.state} \n          toggleEdit = {this.toggleEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  \n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}