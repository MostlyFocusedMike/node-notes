{"version":3,"sources":["context/index.js","adapters/index.js","context/ContextProvider.js","index.js","App.js","components/ModeBar.js","components/MDInputForm.js","helpers/createMarkdown.js","components/MDPreview.js","components/TableOfContents.js","components/MainViewer.js","routes/index.js","components/NewNoteModal.js","components/NotesDir.js","../markdown sync /^/.//.*/.md$","../markdown/SQL-notes-old.md","../markdown/code-snippet-test.md","../markdown/hapi-notes.md","../markdown/knex.md","../markdown/sql-notes-book-Practical-SQL.md","../markdown/test.md"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","AppContext","n","React","createContext","notesUrl","NotesAdapter","title","require","includes","path","concat","fetch","then","response","text","catch","console","log","Promise","resolve","r","json","err","constructor","TypeError","files","options","method","headers","Content-Type","body","JSON","stringify","note","MyProvider","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleEditMode","setState","prevState","isEditMode","checkIfLocal","window","location","href","match","isLocal","state","context","assign","react_default","a","createElement","src_context","Provider","value","props","children","Component","ReactDOM","render","BrowserRouter","ContextProvider","App","document","getElementById","react__WEBPACK_IMPORTED_MODULE_5___default","className","_components_NotesDir__WEBPACK_IMPORTED_MODULE_8__","_routes__WEBPACK_IMPORTED_MODULE_9__","_components_ModeBar__WEBPACK_IMPORTED_MODULE_11__","contextType","hot","module","ModeBar","_this$props","id","onClick","MDInputForm","_setScroll","scrollHeight","aceEditor","editor","session","doc","getAllLines","length","scrollTop","getSession","$scrollTop","setScroll","_setCursorIndex","pos","positionToIndex","selection","getCursor","setCursorIndex","setUseWrapMode","resize","setAutoScrollEditorIntoView","_this2","onSubmit","handleSubmit","htmlFor","name","type","newNote","onChange","handleChange","lib_default","mode","theme","editorProps","$blockScrolling","width","height","ref","onScroll","onCursorChange","createMarkdown","cursorIndex","isSelectiveHighlight","markedEngine","renderer","Renderer","code","lang","highlightedCode","ind","indexOf","difference","Math","abs","highlightjs","getLanguage","highlight","highlightAuto","replace","setOptions","xhtml","configureRenderer","marked","md","MDPreview","handlePreviewScroll","focused","newOffset","el","currentScrollTop","offset","prevOffset","handleMouseEnter","handleMouseLeave","prevProps","scroll","_this$props$note","markdown","onMouseEnter","onMouseLeave","dangerouslySetInnerHTML","__html","TableOfContents","initState","contents","headings","map","padding","link","setContents","checkForHeadings","section","idx","key","Note","target","defineProperty","e","preventDefault","update","objectSpread","oldTitle","params","fileName","redirectNewFile","loadFile","getOne","position","snapshot","components_MDInputForm","viewInfo","components_MDPreview","components_TableOfContents","Routes","Switch","Route","exact","component","MainViewer","NewNoteModal","create","res","msg","alert","Error","loadFiles","Redirect","to","toggleNewFileModal","NotesDir","list","isNewFileModalVisibile","test","components_NewNoteModal","file","Link","./SQL-notes-old.md","./code-snippet-test.md","./hapi-notes.md","./knex.md","./sql-notes-book-Practical-SQL.md","./test.md","webpackContext","req","webpackContextResolve","keys","exports","p"],"mappings":"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","file":"static/js/main.00e98969.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","const notesUrl = 'http://localhost:8100';\n\nclass NotesAdapter {\n    static getOne(title) {\n        const files = require('../files.json');\n        if (files.includes(title)) {\n            const path = require(`../../markdown/${title}.md`); // eslint-disable-line import/no-dynamic-require\n            return fetch(path)\n                .then(response => response.text())\n                .catch(console.log);\n        }\n        return Promise.resolve('# Missing File');\n    }\n\n    static list() {\n        return fetch(`${notesUrl}/notes`)\n            .then(r => r.json())\n            .catch((err) => {\n                /*\n                    if we're on GitHub, then we won't have access to the server,\n                    so we fall back to whatever the latest files.json\n                    A fetch error like this is a TypeError, if we somehow get\n                    another error, it will log it\n                */\n                if (err.constructor === TypeError) {\n                    const files = require('../files.json');\n                    return { files };\n                }\n                return err;\n            });\n    }\n\n    static create(title) {\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(title),\n        };\n\n\n        return fetch(`${notesUrl}/notes`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n\n    static update(note) {\n        const options = {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(note),\n        };\n        return fetch(`${notesUrl}/notes/${note.title}`, options)\n            .then(r => r.json())\n            .catch(console.log);\n    }\n}\n\nexport default NotesAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppContext from '.';\n\nclass MyProvider extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isEditMode: false,\n            isLocal: false,\n        };\n    }\n\n\n    toggleEditMode = () => {\n        this.setState(prevState => ({\n            isEditMode: !prevState.isEditMode,\n        }));\n    }\n\n    checkIfLocal = () => {\n        if (window.location.href.match('//localhost:')) {\n            this.setState({\n                isEditMode: true,\n                isLocal: true,\n            });\n        }\n    }\n\n    render() {\n        const context = Object.assign(\n            this.state,\n            {\n                toggleEditMode: this.toggleEditMode,\n                checkIfLocal: this.checkIfLocal,\n            },\n        );\n\n        return (\n            <AppContext.Provider value={ context }>\n                {this.props.children}\n            </AppContext.Provider>\n        );\n    }\n}\n\nMyProvider.propTypes = {\n    children: PropTypes.object,\n};\n\n\nexport default MyProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport MyProvider from './context/ContextProvider';\n\nReactDOM.render(\n    <BrowserRouter>\n        <MyProvider>\n            <App />\n        </MyProvider>\n    </BrowserRouter>,\n    document.getElementById('root'),\n);\n","import React from 'react';\nimport { hot } from 'react-hot-loader';\nimport './App.css';\nimport NotesDir from './components/NotesDir';\nimport Routes from './routes';\nimport AppContext from './context';\nimport ModeBar from './components/ModeBar';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.context.checkIfLocal();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <NotesDir />\n                <Routes />\n                {\n                    this.context.isLocal ? <ModeBar\n                        isEditMode={ this.context.isEditMode }\n                        toggleEditMode={ this.context.toggleEditMode }\n                    /> : ''\n                }\n\n            </div>\n        );\n    }\n}\n\nApp.contextType = AppContext;\n\nexport default hot(module)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ModeBar extends React.Component {\n    render() {\n        const { toggleEditMode, isEditMode } = this.props;\n        return (\n            <div id='mode-bar'>\n                <p>Currently in { isEditMode ? 'Editing' : 'Viewing' } mode</p>\n                <button onClick={ toggleEditMode }>Toggle</button>\n            </div>\n        );\n    }\n}\n\nModeBar.propTypes = {\n    toggleEditMode: PropTypes.func,\n    isEditMode: PropTypes.bool,\n};\n\nexport default ModeBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AceEditor from 'react-ace';\nimport AppContext from '../context';\n\nimport 'brace/mode/markdown';\nimport 'brace/theme/tomorrow'; // TODO replace this with a theme you like\n\n\nclass MDInputForm extends React.Component {\n    _setScroll = () => {\n        /* figure out what scroll down percentage of the form */\n        const scrollHeight = this.aceEditor.editor.session.doc.getAllLines().length * 16.5;\n        const scrollTop = this.aceEditor.editor.getSession().$scrollTop;\n        this.props.setScroll(scrollTop / scrollHeight);\n    }\n\n    _setCursorIndex = () => {\n        /* convert aceEditor's column/row position info into raw index that preview can use */\n        if (this.aceEditor) { // this gets run before the reference to aceEditor is made, somehow\n            const pos = this.aceEditor.editor.session.doc.positionToIndex(this.aceEditor.editor.selection.getCursor());\n            this.props.setCursorIndex(pos);\n        }\n    }\n\n    componentDidMount() {\n        /* configure the aceEditor settings */\n        this.aceEditor.editor.getSession().setUseWrapMode(false); // no wrap is better for scroll\n        this.aceEditor.editor.resize(); // allow ace to resize on window changes\n        this.aceEditor.editor.setAutoScrollEditorIntoView(true); // if a user selects text out of view, scroll to fit\n    }\n\n    render() {\n        return (\n            <form\n                onSubmit={this.props.handleSubmit}\n            >\n                <label htmlFor=\"title\">title</label>\n                <input\n                    id=\"title\"\n                    name=\"title\"\n                    type=\"text\"\n                    value={this.props.newNote.title}\n                    onChange={this.props.handleChange}\n                />\n                <label htmlFor=\"text\">text</label>\n                <AceEditor\n                    mode=\"markdown\"\n                    theme=\"tomorrow\"\n                    editorProps={{\n                        $blockScrolling: true,\n                    }}\n                    id=\"editor\"\n                    name=\"editor\"\n                    width=\"99%\"\n                    height=\"80vh\"\n                    ref={(aceEditor) => { this.aceEditor = aceEditor; }}\n                    value={this.props.newNote.text}\n                    onChange={this.props.handleChange}\n                    onScroll={this._setScroll}\n                    onCursorChange={this._setCursorIndex}\n                    // onClick={this._setCursorIndex}\n                />\n                <button>Save</button>\n            </form>\n        );\n    }\n}\n\nMDInputForm.propTypes = {\n    handleChange: PropTypes.func,\n    handleSubmit: PropTypes.func,\n    setScroll: PropTypes.func,\n    setCursorIndex: PropTypes.func,\n    newNote: PropTypes.object,\n};\n\nMDInputForm.contextType = AppContext;\n\nexport default MDInputForm;\n","import marked from 'marked';\nimport highlightjs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\n\nconst configureRenderer = (markedEngine, text, cursorIndex, isSelectiveHighlight) => {\n    /**  Create your custom renderer that uses highlight js\n     @param markedEngine: obj, the marked library object\n     @param text: str, text to be converted to markdown\n     @param cursorIndex: int, where the user places their cursor\n     @param isSelectiveHighlight: bool, avoids lagging on long files if true\n    */\n\n    const renderer = new markedEngine.Renderer();\n    renderer.code = (code, lang) => {\n        const ind = text.indexOf(code);\n        const difference = Math.abs(ind - cursorIndex);\n        if (!isSelectiveHighlight || difference < 2000) {\n            let highlightedCode;\n            if (lang && highlightjs.getLanguage(lang)) { // if there is a lang and it's highlight.js recognizes it\n                /*\n                    highlight(langaugeName, textToHighlight, igrnoreImproperSyntax)\n                    - it returns a full object, the highlighted code is inthe value property\n                */\n                highlightedCode = highlightjs.highlight(lang, code, true).value;\n            } else {\n                highlightedCode = highlightjs.highlightAuto(code).value;\n            }\n            return `<pre><code class=\"hljs\">${highlightedCode}</code></pre>`;\n        }\n\n        return `<pre><code class=\"hljs\">${code.replace(/</g, '&lt;')}</code></pre>`;\n    };\n\n    markedEngine.setOptions({\n        renderer,\n        xhtml: false,\n    });\n};\n\nconst renderWelcome = () => {\n    /* create the welcome message */\n    return `\n# hello there\n## start adding markdown to get started\n- don't know where to start? check out the main help page I have yet to write\n- [This markdown crash course](http://blog.kugghuset.se/2015/11/20/markdown-crash-course.html) teaches you how to use it in like 5 minutes`;\n};\n\nconst createMarkdown = (text, cursorIndex, isSelectiveHighlight) => {\n    /* returns the final markdown */\n    configureRenderer(marked, text, cursorIndex, isSelectiveHighlight); // we only want marked to use special highlighing when not in edit mode\n    const md = text || renderWelcome();\n    return marked(md);\n};\n\nexport default createMarkdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport createMarkdown from '../helpers/createMarkdown';\nimport AppContext from '../context';\n\nclass MDPreview extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            currentScrollTop: 0,\n            offset: 0,\n            prevOffset: 0,\n            focused: false,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        /* if the scroll has been updated via the input form, update the mdPreview */\n        if (prevProps.note.scroll !== this.props.note.scroll) {\n            this.el.scrollTop = this.el.scrollHeight * this.props.note.scroll;\n            this.el.scrollTop += this.state.offset;\n            this.setState({\n                currentScrollTop: this.el.scrollTop,\n                prevOffset: this.state.offset, // reset prevOffset\n            });\n        }\n    }\n\n    handlePreviewScroll = () => {\n        /* when the user manually corrects the MDPreview's scroll position */\n        if (this.state.focused) {\n            const newOffset = (this.el.scrollTop - this.state.currentScrollTop);\n            this.setState({\n                offset: this.state.prevOffset + newOffset,\n            });\n        }\n    }\n\n    handleMouseEnter = () => {\n        /* user is hovering over mdPreview */\n        this.setState({ focused: true });\n    }\n\n    handleMouseLeave = () => {\n        /* user has stopped hovering over mdPreview */\n        this.setState({ focused: false });\n    }\n\n    render() {\n        const { title, text, cursorIndex } = this.props.note;\n        const markdown = createMarkdown(text, cursorIndex, this.context.isEditMode); // @TODO change this in the future with a button for context\n        return (\n            <div\n                id=\"md-preview\"\n                onScroll={this.handlePreviewScroll}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseLeave={this.handleMouseLeave}\n                ref={(el) => { this.el = el; }}\n            >\n                <div\n                    dangerouslySetInnerHTML={{ __html: markdown }}\n                    id=\"preview-text\"\n                ></div>\n            </div>\n        );\n    }\n}\n\nMDPreview.propTypes = {\n    note: PropTypes.object,\n};\n\nMDPreview.contextType = AppContext;\n\nexport default MDPreview;\n","import React from 'react';\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\n\nclass TableOfContents extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            contents: [],\n        };\n        this.state = this.initState;\n    }\n\n    setContents(headings) {\n        /* convert headings into table of contents */\n        const contents = headings.map((text) => {\n            const match = text.match(/<h(1|2|3) id=\"(.+)\">(.+)</);\n            return {\n                padding: match[1],\n                link: match[2],\n                text: match[3],\n            };\n        });\n        this.setState({ contents });\n    }\n\n    checkForHeadings() {\n        /* see if there are any headings to convert */\n        if (this.props.text) {\n            const headings = marked(this.props.text).match(/<h(?:1|2|3).+>.+</g);\n            if (headings) {\n                this.setContents(headings);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.checkForHeadings();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.text !== this.props.text) this.checkForHeadings();\n    }\n\n    render() {\n        return (\n            <div id=\"table-of-contents\">\n                <h3>Table of contents</h3>\n                <div id=\"contents\">\n                    <ul>\n                        {\n                            this.state.contents.map((section, idx) => (\n                                <li className={`padding-lvl-${section.padding}`} key={idx}>\n                                    <a href={`#${section.link}`}>{section.text}</a>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nTableOfContents.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default TableOfContents;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MDInputForm from './MDInputForm';\nimport MDPreview from './MDPreview';\nimport TableOfContents from './TableOfContents';\nimport NotesAdapter from '../adapters';\nimport AppContext from '../context';\n\nclass Note extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            text: '',\n            scroll: 0,\n            cursorIndex: 0,\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (value) => {\n        /*  aceEditor and standard inputs send data differently\n            input send e.target.value, ace just send the full editor text value\n        */\n        if (value.target) {\n            this.setState({\n                [value.target.name]: value.target.value,\n            });\n        } else {\n            this.setState({\n                text: value,\n            });\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.update({ ...this.state, oldTitle: this.props.match.params.fileName })\n            .then(() => {\n                if (!this.props.match.params.fileName) this.setState({ redirectNewFile: true });\n            });\n    }\n\n    loadFile = (title) => {\n        NotesAdapter.getOne(title)\n            .then((text) => {\n                this.setState({ title, text });\n            });\n    }\n\n    // handles initial load of the page\n    componentDidMount() {\n        if (this.props.match.params.fileName) this.loadFile(this.props.match.params.fileName);\n    }\n\n    setScroll = (scrollTop) => {\n        this.setState({ scroll: scrollTop });\n    }\n\n    setCursorIndex = (position) => {\n        this.setState({ cursorIndex: position });\n    }\n\n    // handles every time we switch notes\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.fileName !== prevProps.match.params.fileName) {\n            if (this.props.match.params.fileName) {\n                this.loadFile(this.props.match.params.fileName);\n            } else {\n                this.setState(this.initState);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"main-viewer\">\n                {\n                    this.context.isEditMode ?\n                        <MDInputForm\n                            handleChange = {this.handleChange}\n                            handleSubmit = {this.handleSubmit}\n                            newNote = {this.state}\n                            viewInfo={this.context}\n                            toggleEditMode={this.props.toggleEditMode}\n                            setScroll = {this.setScroll}\n                            setCursorIndex = {this.setCursorIndex}\n                        /> : ''\n                }\n                <MDPreview\n                    note = {this.state}\n                />\n                {\n                    !this.context.isEditMode ? <TableOfContents text={this.state.text} /> : ''\n                }\n            </div>\n        );\n    }\n}\n\nNote.propTypes = {\n    match: PropTypes.object,\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nNote.contextType = AppContext;\n\nexport default Note;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport MainViewer from '../components/MainViewer';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route\n                exact path='/' // TODO make actual welcome component\n                component = { MainViewer }\n            />\n            <Route\n                exact path='/notes/:fileName'\n                component = { MainViewer }\n            />\n            <Route\n                exact path='*'\n                component = { MainViewer }\n            />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    viewInfo: PropTypes.object,\n    toggleEditMode: PropTypes.func,\n};\n\nexport default Routes;\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\n\nclass NewNoteModal extends React.Component {\n    constructor() {\n        super();\n        this.initState = {\n            title: '',\n            redirectNewFile: false,\n        };\n        this.state = this.initState;\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        NotesAdapter.create(this.state)\n            .then((res) => {\n                if (res.msg) {\n                    alert(res.msg); // eslint-disable-line\n                    throw new Error('Already Created the file');\n                }\n            })\n            .then(() => {\n                this.props.loadFiles();\n                this.setState({ redirectNewFile: true });\n            })\n            .catch(console.log);\n    }\n\n    shouldComponentUpdate(prevState) {\n        return this.state.title !== prevState.title;\n    }\n\n    render() {\n        // this rerenders one too many times so we wind up redirecting twice before the modal finally disapears, not sure why it ever does\n        if (this.state.redirectNewFile) {\n            return <Redirect to={`/notes/${this.state.title}`}/>;\n        }\n\n        return (\n            <div id=\"new-file-modal\">\n                <h1>I am the new file modal</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <label>File Name</label>\n                    <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n                    <p>Warning: creating a new file will destroy any unsaved changes. Be sure to save your current file</p>\n                    <button onClick={ this.props.toggleNewFileModal }>Cancel</button>\n                    <button>Create</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nNewNoteModal.propTypes = {\n    toggleNewFileModal: PropTypes.func,\n    loadFiles: PropTypes.func,\n};\n\nexport default NewNoteModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NotesAdapter from '../adapters';\nimport NewNoteModal from './NewNoteModal';\nimport AppContext from '../context';\n\n\nclass NotesDir extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            files: [],\n            isNewFileModalVisibile: false,\n        };\n    }\n\n    loadFiles = () => {\n        NotesAdapter.list().then(files => this.setState(files));\n    }\n\n    componentDidMount() {\n        this.loadFiles();\n    }\n\n    toggleNewFileModal = () => {\n        this.setState(prevState => ({\n            isNewFileModalVisibile: !prevState.isNewFileModalVisibile,\n        }));\n    }\n\n    render() {\n        return (\n            <div id=\"notes-dir\">\n                <h1>Files</h1>\n                <h2>{this.context.test}</h2>\n                { this.context.isEditMode ? <button onClick={this.toggleNewFileModal}>New File</button> : '' }\n                {\n                    this.state.isNewFileModalVisibile ? <NewNoteModal\n                        toggleNewFileModal={this.toggleNewFileModal}\n                        loadFiles={this.loadFiles}\n                    /> : ''\n                }\n                { this.state.files.map((file, idx) => <Link to={`/notes/${file}`} key={idx}>{file}</Link>) }\n            </div>\n        );\n    }\n}\n\nNotesDir.propTypes = {\n    viewInfo: PropTypes.object,\n};\n\nNotesDir.contextType = AppContext;\n\nexport default NotesDir;\n","var map = {\n\t\"./SQL-notes-old.md\": 47,\n\t\"./code-snippet-test.md\": 48,\n\t\"./hapi-notes.md\": 49,\n\t\"./knex.md\": 50,\n\t\"./sql-notes-book-Practical-SQL.md\": 51,\n\t\"./test.md\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","module.exports = __webpack_public_path__ + \"static/media/SQL-notes-old.2f358585.md\";","module.exports = __webpack_public_path__ + \"static/media/code-snippet-test.0e11300f.md\";","module.exports = __webpack_public_path__ + \"static/media/hapi-notes.a3475e2d.md\";","module.exports = __webpack_public_path__ + \"static/media/knex.9ecfae0a.md\";","module.exports = __webpack_public_path__ + \"static/media/sql-notes-book-Practical-SQL.4c2a8004.md\";","module.exports = __webpack_public_path__ + \"static/media/test.09a04da2.md\";"],"sourceRoot":""}